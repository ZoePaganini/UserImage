/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spdvi;

import java.awt.Image;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Alumne
 */
public class FormUser extends javax.swing.JFrame {
    final static String pathImage = "src/spdvi/resources/";
    ArrayList<Users> users = new ArrayList<Users>();
    final static String fileName = "src/spdvi/datosUser.txt";
    boolean hasChanges = false;
    JFileChooser fileChooser = new JFileChooser();
    /**
     * Creates new form FormUser
     */
    public FormUser() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupGender = new javax.swing.ButtonGroup();
        txtId = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtBirthDate = new javax.swing.JTextField();
        radMale = new javax.swing.JRadioButton();
        radFemale = new javax.swing.JRadioButton();
        chkIsAlive = new javax.swing.JCheckBox();
        btnInput = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listUsers = new javax.swing.JList<>();
        lblImage = new javax.swing.JLabel();
        btnLoadImage = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mniFile = new javax.swing.JMenu();
        mniExit = new javax.swing.JMenu();
        mniCRUD = new javax.swing.JMenu();
        mniInsert = new javax.swing.JMenu();
        mniUpdate = new javax.swing.JMenu();
        mniSave = new javax.swing.JMenu();
        mniDelete = new javax.swing.JMenu();
        mniHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("User Form");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        txtId.setText("ID");
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        txtFirstName.setText("First Name");

        txtLastName.setText("Last Name");
        txtLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastNameActionPerformed(evt);
            }
        });

        txtBirthDate.setText("Birthdate (yyyy-MM-dd)");

        btnGroupGender.add(radMale);
        radMale.setText("Male");

        btnGroupGender.add(radFemale);
        radFemale.setText("Female");

        chkIsAlive.setText("Alive");

        btnInput.setText("Input");
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnLoad.setText("Load");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        listUsers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listUsersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listUsers);

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/spdvi/resources/default-user.png"))); // NOI18N

        btnLoadImage.setText("Load");
        btnLoadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadImageActionPerformed(evt);
            }
        });

        mniFile.setText("File");

        mniExit.setText("Exit");
        mniExit.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                mniExitMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        mniExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniExitActionPerformed(evt);
            }
        });
        mniFile.add(mniExit);

        jMenuBar1.add(mniFile);

        mniCRUD.setText("CRUD");

        mniInsert.setText("Insert");
        mniInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniInsertActionPerformed(evt);
            }
        });
        mniCRUD.add(mniInsert);

        mniUpdate.setText("Update");
        mniUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUpdateActionPerformed(evt);
            }
        });
        mniCRUD.add(mniUpdate);

        mniSave.setText("Save");
        mniSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSaveActionPerformed(evt);
            }
        });
        mniCRUD.add(mniSave);

        mniDelete.setText("Delete");
        mniDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDeleteActionPerformed(evt);
            }
        });
        mniCRUD.add(mniDelete);

        jMenuBar1.add(mniCRUD);

        mniHelp.setText("Help");
        jMenuBar1.add(mniHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(txtBirthDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkIsAlive, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radMale, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(radFemale, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblImage)
                                .addGap(211, 211, 211))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(btnLoadImage)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radMale)
                            .addComponent(radFemale))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkIsAlive))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInput)
                            .addComponent(btnUpdate)))
                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoadImage)
                    .addComponent(btnLoad)
                    .addComponent(btnSave)
                    .addComponent(btnDelete))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastNameActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        try {
            users.clear();
            BufferedReader load = new BufferedReader(new FileReader(fileName));
            String currentLine = load.readLine();
            while (currentLine != null) {
                String [] fields = currentLine.split(",");
                Users user = new Users(fields[0], fields[2], fields[1], LocalDate.parse(fields[3]), fields[4],
                        fields[5].equals("Alive") ? true : false, fields[6]);
                users.add(user);
                currentLine = load.readLine();
            }
            load.close();
        } catch (FileNotFoundException fnfe) {
            System.err.println("Something went wrong");
            
        } catch (IOException ex) {
            Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        DefaultListModel usersListModel = new DefaultListModel();
        
        for (Users u: users) {
            usersListModel.addElement(u.toString());
        }
        
        listUsers.setModel(usersListModel);
        hasChanges = false;
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
      try {
        LocalDate birthDate = LocalDate.parse(txtBirthDate.getText());
        String gender = "Male";
        if (radFemale.isSelected()) gender = "Female";
        if (fileChooser.getSelectedFile() == null)
        {
            EncuestaDialog aviso = new EncuestaDialog(this, true);
            aviso.getLblMessage().setText("No tiene foto de perfil. Pulse OK para elegir una.");
            aviso.setVisible(true);
            if(aviso.imagen == true)
                fileChooser.showOpenDialog(this);
            else fileChooser.setSelectedFile(new File(pathImage + "default-user.png"));
        }
        BufferedImage bufferedimage = ImageIO.read(new File(fileChooser.getSelectedFile().getAbsolutePath()));
        String outputImageAbsolutePath = pathImage + fileChooser.getSelectedFile().getName();
        File outputImage = new File(outputImageAbsolutePath);   
        ImageIO.write(bufferedimage, "jpg", outputImage);
        
        Users user = new Users(txtId.getText(), txtFirstName.getText(), txtLastName.getText(), birthDate, gender, chkIsAlive.isSelected(), fileChooser.getSelectedFile().getName());
        
        users.add(user);
        
        UpdateListView();
        hasChanges = true;
        } catch (IOException ex) {
           EncuestaDialog encuesta = new EncuestaDialog(this, true);
           encuesta.getLblMessage().setText(ex.getMessage());
           encuesta.setVisible(true);
        }      
    }//GEN-LAST:event_btnInputActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
         for (Users u: users) {
            if(u.getId().equals(txtId.getText())) {
                u.setFirstName(txtFirstName.getText());
                u.setLastName(txtLastName.getText());
                LocalDate birthDate = LocalDate.parse(txtBirthDate.getText());
                u.setBirthDate(birthDate);
                u.setGender(radMale.isSelected() ? "Male" : "Female");
                u.setIsAlive(chkIsAlive.isSelected());
                u.setRutaImage(fileChooser.getSelectedFile().getName());
                hasChanges = true;
            }
        }
        UpdateListView();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        GuardarFichero guardar = new GuardarFichero(this, true);
        guardar.setVisible(true);
        if (guardar.save == true) {
        try {
            BufferedWriter save = new BufferedWriter(new FileWriter(fileName));
            //save.write(txaInfo.getText());
            for (Users usuario : users)
            {
                save.write(usuario.toCSV());
                /*String outputImageAbsolutePath = pathImage + usuario.getRutaImage();
                File outputImage = new File(outputImageAbsolutePath);*/
            }            
            save.close();
            hasChanges = false;
        } catch (IOException e) {
            System.err.println("Something went wrong.");
            e.printStackTrace();
        }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String selectedUser = listUsers.getSelectedValue();
        int lastIndex = selectedUser.indexOf(":");
        
        String selectedUserId = selectedUser.substring(0, lastIndex);
            
        for(Users usuario: users) {
            if(usuario.getId().equals(selectedUserId)) {
                users.remove(usuario);
                File imagenPerfil = new File(pathImage + usuario.getRutaImage());
                imagenPerfil.delete();
                break;
            }
        }
        DefaultListModel userListModel = new DefaultListModel();
        for(Users usuario: users) {
            userListModel.addElement(usuario.toString());
        }
        listUsers.setModel(userListModel);
        hasChanges = true;
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void listUsersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listUsersValueChanged
        String selectedUser = listUsers.getSelectedValue();
        if (selectedUser != null) {
            int lastIndex = selectedUser.indexOf(":");
            String selectedUserId = selectedUser.substring(0, lastIndex);
            for (Users u: users) {
                if (u.getId().equals(selectedUserId)) {
                    txtId.setText(u.getId());
                    txtFirstName.setText(u.getFirstName());
                    txtLastName.setText(u.getLastName());
                    String formattedDate = u.getBirthDate().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
                    txtBirthDate.setText(formattedDate);
                    if ("Male".equals(u.getGender())) {
                        radMale.setSelected(true);
                        //radGenderFemale.setSelected(false);
                    }
                    else if ("Female".equals(u.getGender())) {
                        //radGenderMale.setSelected(false);
                        radFemale.setSelected(true);
                    }
                    else {
                        //ERROR: Throw exception
                    }
                    chkIsAlive.setSelected(u.isIsAlive());   
                    
                    BufferedImage bufferedImage = null;
                    try {
                        bufferedImage = ImageIO.read(new File(pathImage + u.getRutaImage()));
                        ImageIcon icon = resizeImageIcon(bufferedImage, lblImage.getWidth(), lblImage.getHeight());
                        lblImage.setIcon(icon);
            
                    } catch (IOException ioe) {
                        ioe.printStackTrace();
                    }
                }
            }            
        }
    }//GEN-LAST:event_listUsersValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        while (hasChanges) {
        GuardarFichero salida = new GuardarFichero(this, true);
        salida.setVisible(true);
        if (salida.save == true) {
        try {
            BufferedWriter save = new BufferedWriter(new FileWriter(fileName));
            //save.write(txaInfo.getText());
            for (Users usuario : users)
            {
                save.write(usuario.toCSV());
            }
            save.close();
            hasChanges = false;
        } catch (IOException e) {
            System.err.println("Something went wrong.");
            e.printStackTrace();
        }
        }
        }
    }//GEN-LAST:event_formWindowClosing

    private void mniInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniInsertActionPerformed
        btnInput.doClick();
    }//GEN-LAST:event_mniInsertActionPerformed

    private void mniUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUpdateActionPerformed
        btnUpdate.doClick();
    }//GEN-LAST:event_mniUpdateActionPerformed

    private void mniSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSaveActionPerformed
        btnSave.doClick();
    }//GEN-LAST:event_mniSaveActionPerformed

    private void mniDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDeleteActionPerformed
        btnDelete.doClick();
    }//GEN-LAST:event_mniDeleteActionPerformed

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniExitActionPerformed
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniExitMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mniExitMenuKeyPressed
    }//GEN-LAST:event_mniExitMenuKeyPressed

    private void btnLoadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadImageActionPerformed
        fileChooser.showOpenDialog(this);
        BufferedImage bufferedImage = null;
        try {
            bufferedImage = ImageIO.read(new File(fileChooser.getSelectedFile().getAbsolutePath()));
            ImageIcon icon = resizeImageIcon(bufferedImage, lblImage.getWidth(), lblImage.getHeight());
            lblImage.setIcon(icon);
            
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }//GEN-LAST:event_btnLoadImageActionPerformed

    private void UpdateListView() {
        DefaultListModel usersListModel = new DefaultListModel();
        for(Users u: users) {
            usersListModel.addElement(u.toString());
        }
        listUsers.setModel(usersListModel);
    }
    private ImageIcon resizeImageIcon (BufferedImage originalImage, int desiredWidth, int desiredHeight) {
        int newHeight = 0;    
        int newWidth = 0;
        float aspectRatio = (float)originalImage.getWidth() / originalImage.getHeight();
        if (originalImage.getWidth() > originalImage.getHeight()) {
            newWidth = desiredWidth;
            newHeight = Math.round( desiredWidth / aspectRatio);                
        }
        else {
            newHeight = desiredHeight;
            newWidth = Math.round(desiredHeight * aspectRatio);
        }
        Image resultingImage = originalImage.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);
        BufferedImage outputImage = new BufferedImage(newWidth, newHeight, BufferedImage.TYPE_INT_RGB);
        outputImage.getGraphics().drawImage(resultingImage, 0, 0, null);
        ImageIcon imageIcon = new ImageIcon(outputImage);
        return imageIcon;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.ButtonGroup btnGroupGender;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnLoadImage;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox chkIsAlive;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JList<String> listUsers;
    private javax.swing.JMenu mniCRUD;
    private javax.swing.JMenu mniDelete;
    private javax.swing.JMenu mniExit;
    private javax.swing.JMenu mniFile;
    private javax.swing.JMenu mniHelp;
    private javax.swing.JMenu mniInsert;
    private javax.swing.JMenu mniSave;
    private javax.swing.JMenu mniUpdate;
    private javax.swing.JRadioButton radFemale;
    private javax.swing.JRadioButton radMale;
    private javax.swing.JTextField txtBirthDate;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLastName;
    // End of variables declaration//GEN-END:variables
}
